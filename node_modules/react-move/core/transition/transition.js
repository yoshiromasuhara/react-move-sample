'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.preset = undefined;

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _extends5 = require('babel-runtime/helpers/extends');

var _extends6 = _interopRequireDefault(_extends5);

exports.newId = newId;
exports.default = transition;

var _d3Timer = require('d3-timer');

var _lodash = require('lodash.once');

var _lodash2 = _interopRequireDefault(_lodash);

var _tween = require('./tween');

var _tween2 = _interopRequireDefault(_tween);

var _schedule = require('./schedule');

var _schedule2 = _interopRequireDefault(_schedule);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//  weak

var id = 0;

function newId() {
  return ++id;
}

// from https://github.com/d3/d3-ease/blob/master/src/linear.js
function linear(t) {
  return +t;
}

var preset = exports.preset = {
  time: null,
  delay: 0,
  duration: 250,
  ease: linear
};

function scheduleTransitions() {
  var _this = this;

  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var transitions = (0, _extends6.default)({}, config);

  var events = transitions.events || {};
  delete transitions.events;

  // each event handler should be called only once
  (0, _keys2.default)(events).forEach(function (d) {
    if (typeof events[d] !== 'function') {
      throw new Error('Event handlers must be a function');
    } else {
      events[d] = (0, _lodash2.default)(events[d]);
    }
  });

  var timing = transitions.timing || {};
  delete transitions.timing;

  (0, _keys2.default)(transitions).forEach(function (stateKey) {
    var tweens = [];

    if ((0, _typeof3.default)(transitions[stateKey]) === 'object' && Array.isArray(transitions[stateKey]) === false) {
      (0, _keys2.default)(transitions[stateKey]).forEach(function (attr) {
        var val = transitions[stateKey][attr];

        if (Array.isArray(val)) {
          if (val.length === 1) {
            tweens.push(_tween2.default.call(_this, stateKey, attr, val[0]));
          } else {
            _this.setState(function (state) {
              return (0, _defineProperty3.default)({}, stateKey, (0, _extends6.default)({}, state[stateKey], (0, _defineProperty3.default)({}, attr, val[0])));
            });

            tweens.push(_tween2.default.call(_this, stateKey, attr, val[1]));
          }
        } else if (typeof val === 'function') {
          var getResonanceCustomTween = function getResonanceCustomTween() {
            var resonanceCustomTween = function resonanceCustomTween(t) {
              _this.setState(function (state) {
                return (0, _defineProperty3.default)({}, stateKey, (0, _extends6.default)({}, state[stateKey], (0, _defineProperty3.default)({}, attr, val(t))));
              });
            };

            return resonanceCustomTween;
          };

          tweens.push(getResonanceCustomTween);
        } else {
          _this.setState(function (state) {
            return (0, _defineProperty3.default)({}, stateKey, (0, _extends6.default)({}, state[stateKey], (0, _defineProperty3.default)({}, attr, val)));
          });
          // This assures any existing transitions are stopped
          tweens.push(_tween2.default.call(_this, stateKey, attr, val));
        }
      });
    } else {
      var val = transitions[stateKey];

      if (Array.isArray(val)) {
        if (val.length === 1) {
          tweens.push(_tween2.default.call(_this, null, stateKey, val[0]));
        } else {
          _this.setState(function () {
            return (0, _defineProperty3.default)({}, stateKey, val[0]);
          });

          tweens.push(_tween2.default.call(_this, null, stateKey, val[1]));
        }
      } else if (typeof val === 'function') {
        var getResonanceCustomTween = function getResonanceCustomTween() {
          var resonanceCustomTween = function resonanceCustomTween(t) {
            _this.setState(function () {
              return (0, _defineProperty3.default)({}, stateKey, val(t));
            });
          };

          return resonanceCustomTween;
        };

        tweens.push(getResonanceCustomTween);
      } else {
        _this.setState(function () {
          return (0, _defineProperty3.default)({}, stateKey, val);
        });
        // This assures any existing transitions are stopped
        tweens.push(_tween2.default.call(_this, null, stateKey, val));
      }
    }

    var timingConfig = (0, _extends6.default)({}, preset, timing, { time: (0, _d3Timer.now)() });
    (0, _schedule2.default)(_this, stateKey, newId(), timingConfig, tweens, events);
  });
}

function transition(config) {
  var _this2 = this;

  if (Array.isArray(config)) {
    config.forEach(function (c) {
      scheduleTransitions.call(_this2, c);
    });
  } else {
    scheduleTransitions.call(this, config);
  }
}