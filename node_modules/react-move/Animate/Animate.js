'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _d3Timer = require('d3-timer');

var _transition = require('../core/transition');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Animate = function (_Component) {
  (0, _inherits3.default)(Animate, _Component);

  function Animate() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, Animate);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Animate.__proto__ || (0, _getPrototypeOf2.default)(Animate)).call.apply(_ref, [this].concat(args))), _this), _this.state = _this.props.start, _this.checkTransitionStatus = function () {
      if (!_this.TRANSITION_SCHEDULES) {
        _this.interval.stop();

        if (_this.props.show === false) {
          _this.renderNull = true;
          _this.setState(function (prevState) {
            return prevState;
          }); // force render as null
        }
      }
    }, _this.interval = null, _this.renderNull = true, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(Animate, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      if (this.props.show === true) {
        this.renderNull = false;
      }
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _props = this.props,
          enter = _props.enter,
          show = _props.show;


      if (enter && show === true) {
        _transition.transition.call(this, enter);
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(next) {
      var _this2 = this;

      var show = next.show,
          start = next.start,
          enter = next.enter,
          update = next.update,
          leave = next.leave;


      if (this.props.show === false && this.renderNull === true && show === true) {
        this.renderNull = false;

        this.setState(function () {
          return start;
        }, function () {
          if (enter) {
            _transition.transition.call(_this2, enter);
          }
        });
      } else if (this.props.show === true && show === false) {
        if (leave) {
          _transition.transition.call(this, leave);
          this.interval = (0, _d3Timer.interval)(this.checkTransitionStatus);
        } else {
          this.renderNull = true;
          this.setState(function (prevState) {
            return prevState;
          }); // force render as null
        }
      } else if (show === true && update) {
        if (this.interval) {
          this.interval.stop();
        }

        _transition.transition.call(this, update);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this.interval) {
        this.interval.stop();
      }

      _transition.stop.call(this);
    }
  }, {
    key: 'render',
    value: function render() {
      if (this.renderNull === true) {
        return null;
      }

      var renderedChildren = this.props.children(this.state);
      return renderedChildren && _react2.default.Children.only(renderedChildren);
    }
  }]);
  return Animate;
}(_react.Component); //  weak
/* eslint max-len: "off" */

Animate.defaultProps = {
  show: true
};
exports.default = Animate;